// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wba.Pe2.Mvc.Data;

namespace Wba.Pe2.Mvc.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20211226130610_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharacterGame", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("int");

                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.HasKey("CharactersId", "GamesId");

                    b.HasIndex("GamesId");

                    b.ToTable("CharacterGame");

                    b.HasData(
                        new
                        {
                            CharactersId = 1,
                            GamesId = 1
                        },
                        new
                        {
                            CharactersId = 2,
                            GamesId = 2
                        },
                        new
                        {
                            CharactersId = 2,
                            GamesId = 3
                        },
                        new
                        {
                            CharactersId = 3,
                            GamesId = 2
                        },
                        new
                        {
                            CharactersId = 3,
                            GamesId = 3
                        },
                        new
                        {
                            CharactersId = 4,
                            GamesId = 11
                        },
                        new
                        {
                            CharactersId = 5,
                            GamesId = 4
                        },
                        new
                        {
                            CharactersId = 6,
                            GamesId = 4
                        },
                        new
                        {
                            CharactersId = 7,
                            GamesId = 5
                        },
                        new
                        {
                            CharactersId = 7,
                            GamesId = 6
                        },
                        new
                        {
                            CharactersId = 8,
                            GamesId = 5
                        },
                        new
                        {
                            CharactersId = 8,
                            GamesId = 6
                        },
                        new
                        {
                            CharactersId = 9,
                            GamesId = 7
                        },
                        new
                        {
                            CharactersId = 9,
                            GamesId = 8
                        },
                        new
                        {
                            CharactersId = 10,
                            GamesId = 7
                        },
                        new
                        {
                            CharactersId = 10,
                            GamesId = 8
                        },
                        new
                        {
                            CharactersId = 12,
                            GamesId = 9
                        },
                        new
                        {
                            CharactersId = 12,
                            GamesId = 10
                        },
                        new
                        {
                            CharactersId = 13,
                            GamesId = 9
                        },
                        new
                        {
                            CharactersId = 13,
                            GamesId = 10
                        },
                        new
                        {
                            CharactersId = 14,
                            GamesId = 12
                        });
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformsId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "PlatformsId");

                    b.HasIndex("PlatformsId");

                    b.ToTable("GamePlatform");
                });

            modelBuilder.Entity("GameProperty", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("PropertiesId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "PropertiesId");

                    b.HasIndex("PropertiesId");

                    b.ToTable("GameProperty");
                });

            modelBuilder.Entity("Wba.Pe2.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Shooter"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Role playing"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Moba"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Action-Adventure"
                        });
                });

            modelBuilder.Entity("Wba.Pe2.Domain.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kratos"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ratchet"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Clank"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Geralt"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dazzle"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Luna"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Nathan Drake"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sully"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Messi"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Ronaldo"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Jak"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Joel"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Ellie"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Ghost"
                        });
                });

            modelBuilder.Entity("Wba.Pe2.Domain.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Santa Monica"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Valve Corporation"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Insomniac games"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cd Projekt"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ea Sports"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Naughty Dog"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Infinity ward"
                        });
                });

            modelBuilder.Entity("Wba.Pe2.Domain.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 5,
                            DeveloperId = 1,
                            Name = "God of War",
                            Price = 39.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            DeveloperId = 3,
                            Name = "Ratchet and Clank",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            DeveloperId = 3,
                            Name = "Ratchet and Clank : A Rift Apart",
                            Price = 69.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            DeveloperId = 2,
                            Name = "Dota 2",
                            Price = 0m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            DeveloperId = 6,
                            Name = "Uncharted : Drake's fortune",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            DeveloperId = 6,
                            Name = "Uncharted 2:Among thieves ",
                            Price = 14.99m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            DeveloperId = 5,
                            Name = "Fifa 2021",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            DeveloperId = 5,
                            Name = "Fifa 2020",
                            Price = 7.99m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            DeveloperId = 6,
                            Name = "The last of us",
                            Price = 17.99m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            DeveloperId = 6,
                            Name = "The last of us part 2",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            DeveloperId = 4,
                            Name = "The Witcher",
                            Price = 24.99m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            DeveloperId = 7,
                            Name = "Call of duty: Modern Warfare",
                            Price = 55.45m
                        });
                });

            modelBuilder.Entity("Wba.Pe2.Domain.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pc"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Xbox"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Playstation"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Nintendo"
                        });
                });

            modelBuilder.Entity("Wba.Pe2.Domain.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SubCategory = "Blood"
                        },
                        new
                        {
                            Id = 2,
                            SubCategory = "Drugs"
                        },
                        new
                        {
                            Id = 3,
                            SubCategory = "Violence"
                        },
                        new
                        {
                            Id = 4,
                            SubCategory = "Foul language"
                        },
                        new
                        {
                            Id = 5,
                            SubCategory = "18+"
                        },
                        new
                        {
                            Id = 6,
                            SubCategory = "7+"
                        },
                        new
                        {
                            Id = 7,
                            SubCategory = "3+"
                        },
                        new
                        {
                            Id = 8,
                            SubCategory = "In-game purchases"
                        });
                });

            modelBuilder.Entity("CharacterGame", b =>
                {
                    b.HasOne("Wba.Pe2.Domain.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wba.Pe2.Domain.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.HasOne("Wba.Pe2.Domain.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wba.Pe2.Domain.Platform", null)
                        .WithMany()
                        .HasForeignKey("PlatformsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameProperty", b =>
                {
                    b.HasOne("Wba.Pe2.Domain.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wba.Pe2.Domain.Property", null)
                        .WithMany()
                        .HasForeignKey("PropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wba.Pe2.Domain.Game", b =>
                {
                    b.HasOne("Wba.Pe2.Domain.Category", "Category")
                        .WithMany("Games")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wba.Pe2.Domain.Developer", "Developer")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("Wba.Pe2.Domain.Category", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("Wba.Pe2.Domain.Developer", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
